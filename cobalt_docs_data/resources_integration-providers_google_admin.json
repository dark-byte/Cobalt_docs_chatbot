{
    "url": "https://docs.gocobalt.io/resources/integration-providers/google_admin#creating-an-app-in-google-admin",
    "text": "Setup - Cobalt Cobalt home page v2 Search... Dashboard Contact Us Dashboard Search... Navigation Google Admin Setup Documentation Implementation & Guides API Reference SDKs Resources Cobalt home page v2 Postman Get Your API Key Examples Resources Integration Providers Overview Adobe Sign Adobe Workfront Agile CRM Aircall Airtable Amazon S3 Apptivo Asana Attio AWS Security Hub Azure Security Center Basecamp BigCommerce Bitbucket Box Calendly Capsule CRM Chargify ClickUp Clover Confluence Constant Contact Contentful Copper Customer.io Deel DocuSign Dropbox Epic Etsy Exact Online Facebook Ads Figma Fireflies.ai FreeAgent FreshBooks FreshSales CRM Front GetResponse GitHub Gong Google Admin Setup Google Drive Google Sheets Gusto Harvest Help Scout HiBob HighLevel Hubspot Intercom Jibble Jira Keap Keka HR Lever Mailchimp Marketo Miro Microsoft Office 365 Microsoft Defender Microsoft Dynamics CRM Microsoft OneDrive Microsoft Teams Monday MyOB NetSuite Notion OpenText Outreach PagerDuty Pandle Pardot Pipedrive QuickBooks Salesforce Salesforce Financial Services Cloud Salesloft Sentry ServiceNow Shopify Slack Snowflake SurveyMonkey Tableau Talkdesk Teamwork Trello Twilio Workable Workday Wrike Xero Zendesk Sell Zettle Zoho Books Zoho CRM Zoom Google Admin Setup Connect to your Google Admin app for OAuth. To setup your Google Admin app in Cobalt for OAuth, you will need the following credentials from your Google Cloud Console dashboard : Client ID Client Secret Scopes ​ Pre-requisites Google Cloud Console account. You can create one here . ​ Required Settings Mandatory Scopes https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/admin.reports.audit.readonly If you haven’t already created a project in Google Cloud Console, you’d need to create one. ​ Creating an app in Google Admin To create a Google Admin app and aquire the above mentioned credentials, please follow the steps mentioned below: Log in to your Google Cloud Console dashboard . Click on the Create Project button in the top right. Enter the Project Name for your application, select Organization and Location . In the Google Cloud Console dashboard , navigate to APIs and services > Credentials in the left side menu. Ensure that the correct app is selected by checking the name of the app in the dropdown in the top navigation bar. Go to your Apps catalog in Cobalt > Search for Google Admin > Settings > Use your credentials > Callback Url > Copy it. Click on + Create Credentials button in the top in the Cloud Console app and select OAuth client ID . Note : You will need to configure Google’s consent screen for access to Client ID and Client Secret if not done previously. Select Web application from the Application type dropdown > scroll to Authorized redirect URIs section > Click + Add URI button > Paste the Callback Url > Click Create button in the bottom. Navigate to OAuth consent screen in the left menu under APIs and services > Click on the Edit App button > Scroll down > Click Save and Continue in the OAuth consent screen section > Click Add or Remove Scopes button in the Scopes section. Enter the mandatory scopes under Manually add scopes > Click on Add To Table > Click on Update > Click on Save and Continue at the bottom of the page. Go to Enabled APIs and services in the left menu under APIs and services > Click on + Enable APIs and Services > Search for Admin SDK API > Click on Enable . Navigate to Credentials in the left menu under APIs and services and select the Web Client under OAuth 2.0 Client IDs . Copy the Client ID and Client Secret under Additional information section. ​ Configuring credentials in Cobalt App settings page lets you configure the authentication settings for an OAuth2 based application. For your customers to provide you authorization to access their data, they would first need to install your application. This page lets you set up your application credentials. Cobalt lets you use pre-configured applications to play around. You can do so by selecting Use our credentials . However, if you wish to use your own application, select Use your own credentials . Provide the aquired Client Id and Client secret and save it. ​ Configuring Scopes Cobalt lets you configure what permissions to ask from your users while they install your application. The scopes can be added or removed from the App settings page, under Permissions & Scopes section. For some applications Cobalt sets mandatory scopes which cannot be removed. Additional scopes can be selected from the drop down. Cobalt also has the provision to add any custom scopes supported by the respective platform. Once the scopes has been added to the project in Cobalt, go to your Google Cloud Console dashboard and update the scopes as added on Cobalt. Navigate to Cloud Console dashboard > Select the Project created for Cobalt > Follow the steps 8 and 9 mentioned above for adding scopes. If you are facing scopes missing or invalid scope error. Make sure you are not passing any custom scope not supported by the platform. And, the scopes selected here are identical to the ones selected in the platform. ​ App Review for Google Admin Projects configured with a publishing status of In production are available to any user with a Google Account. Projects configured with a publishing status of In production should complete the verification process, including defining scopes actively requested by your project’s OAuth clients, if it meets one or more of the OAuth verification criteria. ​ To submit app for review In the Project, go to OAuth consent screen in the left menu under APIs and services > Choose the App type as External and click on Publish App button. Click on Prepare for Verification and provide the required information. You will be required to submit justification for the scopes requested and a demo video on YouTube which shows the scopes being used. Learn more about publishing apps in Google Cloud Console here . ​ Actions and triggers Once the above setup is completed, you can create orchestrations of your use-cases using Google Admin actions and triggers. Following are the set of Google Admin actions and triggers supported by Cobalt. Actions Triggers User Activity Get User Activities For A Particular Application - Get User Activities For A Particular Application in Google Admin. User Create User - Create a new user in Google Admin. Delete User - Delete a user by ID in Google Admin. Others HTTP Request - Make HTTP API calls to any Google Admin documented REST APIs. Setup Setup linkedin twitter Powered by Mintlify On this page Pre-requisites Required Settings Creating an app in Google Admin Configuring credentials in Cobalt Configuring Scopes App Review for Google Admin To submit app for review Actions and triggers"
}