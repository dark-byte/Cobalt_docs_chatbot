{
    "url": "https://docs.gocobalt.io/build/workflow/datastore",
    "text": "(Deprecated) Datastore Node - Cobalt Cobalt home page v2 Search... Dashboard Contact Us Dashboard Search... Navigation (Deprecated) Datastore Node Documentation Implementation & Guides API Reference SDKs Resources Cobalt home page v2 Postman Get Your API Key Examples Getting Started Introduction Quickstart Build Platform Setup Connectors Workflows Advanced Features Ship Integrations Auth Flows Try API Maintain Observability with Logs Reliability Custom App Custom App Setup Deployment Cobalt Deployment Hosting Solutions Governance & Compliance Security Application Security Compliance & Certifications Privacy Policy Term of Use (Deprecated) Datastore Node The DataStore node in Cobalt allows users to manage dynamic data generated within workflows. Datastores are structured with rows and columns , the DataStore node let the users to store, manipulate, or retrieve data, enhancing the flexibility and efficiency of workflow automation. ​ Runtime Variable Creation Users can create and utilize variables at runtime within workflows, enabling dynamic data management and manipulation. This capability allows users to adapt workflows to changing requirements and scenarios, enhancing workflow flexibility and adaptability. ​ DataStore Types The type of a Datastore can be chosen by the user when the Create Datastore action is selected in the node. The DataStore node can be of two types: ​ Workflow Type DataStore This type of DataStore is specific to the respective workflow. Data stored in a Workflow Type DataStore is accessible only within the context of the workflow in which it is created. ​ Config Type DataStore Config Type DataStore can be used across all workflows of the respective application. Data stored in a Config Type DataStore is accessible across multiple workflows within the same application in Cobalt. ​ DataStore Actions The DataStore node offers a range of actions which can be used in a Workflow: Create Datastore Delete Datastore Get Datastores Add Datastore Records Search Datastore Records Get Datastore Records Update Datastore Records Delete Datastore Records ​ Create DataStore action Users can create new DataStore instances within workflows, specifying the Type (Workflow or Config) and defining the structure of the DataStore. This action is mandatory to use to create any new datastore required for the Workflow of any application. While using this action, the user is required to provide information like the Type , Name of Datastore and the Columns for the Datastore and then click on Save . ​ Delete DataStore action Users have the option to delete existing DataStore instances by using this action. The user is required to provide the name of Datastore which needs to be deleted. ​ Get DataStores action Users can retrieve a list of all DataStores associated with the workflow or application, providing visibility into existing data storage structures. After selecting the action, just select the Type of Datastore that you want to fetch. ​ Add DataStore Records action Users can add new records to a table DataStore, specifying the appropriate DataStore instance and the data to be stored in it. When the user selects the Datastore from the Datastore dropdown, then the user can add the data in the columns of it. ​ Search DataStore Records action Users can search for specific records within a DataStore. As you selects the Datastore in the action, you can now search for records based on any of the columns’ value present in the Datastore. ​ Get DataStore Records action Users can retrieve all the records of a DataStore by selecting the Datastore from the dropdown, enabling access to stored data for further processing within the workflow. ​ Update DataStore Records action Users can update existing records of a DataStore table, modifying data values or attributes as needed to reflect changes or updates. User can select the Datastore which they want to update and then enter the new values in the respective fields to update it. ​ Delete DataStore Records action Users can delete specific records from a DataStore table, removing outdated or unnecessary data entries to maintain data integrity and efficiency. Select the Datastore from which you want to delete a Record and provide the unique Record_Id of the record which was generated during record creation. ​ Using the Datastore Node in a workflow Some of the prominent features of using a Datastore Node in Workflow are: Workflow Customization By leveraging the DataStore node, users can customize workflows to meet specific requirements and scenarios, enabling dynamic data management and manipulation. Dynamic Data Management The DataStore node streamlines data management tasks within workflows, providing users with a solution for storing, retrieving, and manipulating data. Integration Flexibility With its versatile data management capabilities, the DataStore node enhances integration flexibility, enabling data exchange and synchronization across multiple workflows within applications. linkedin twitter Powered by Mintlify On this page Runtime Variable Creation DataStore Types Workflow Type DataStore Config Type DataStore DataStore Actions Create DataStore action Delete DataStore action Get DataStores action Add DataStore Records action Search DataStore Records action Get DataStore Records action Update DataStore Records action Delete DataStore Records action Using the Datastore Node in a workflow"
}